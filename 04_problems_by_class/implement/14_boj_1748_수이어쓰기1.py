# 느낀점:
# 1. 시복을 줄일 때는, while n=n//2 (lg2N), n=n//10  업데이트가 아닌 이상
#  -> n이 아닌 반복문 + 수식(공식) 이용 O(1) 등을 생각한다.
################ Input From input.txt ################
import sys
from pprint import pprint
sys.stdin = open("./input.txt", "rt")

### 백준용
### import sys
### input = sys.stdin.readline
######################################################

N = int(input())

# 주어진수의 자리수가 최대 몇까진지 챙긴다.
# 1~9은 자리수+1
# 10~99은 자리수+2
# 100~999은 자리수+3 이기 때문에, 범위를 나누어서 카운팅해야한다.
#  자리수 i라면?
# 10**(i-1) ~ ((10**i) -1)
l, ret = len(str(N)), 0
# 니 자리수가 3자리라면
# 1자리 카운트 다 셈:   ((((10**i) -1)  -  10**(i-1)) + 1 개)  * 1
# 2자리 카운트 다 셈
# 3자리 카운트는 10**(i-1) 부터, < 120-100+1 >개를 셈

# n자리수라면, n-1자리까지는 다셈
for i in range(1, l):
    ret+= i*(10**i - 10**(i-1))
# 마지막 n자리수를, n자리 시작수 ~  해당수 까지 셈.
ret+= l*(N-10 **(l-1) +1 )

print(ret)


# while N > 0 :
#     N = N//10
#     ret+=1
#     print(N)



